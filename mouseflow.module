<?php

/**
 * Implements hook_menu().
 */
function mouseflow_menu() {
	$items = array();
	$items['admin/config/system/mouseflow'] = array(
		'title' => 'Mouseflow',
		'description' => 'Configure Mouseflow implementation.',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('mouseflow_admin_form'),
		'access arguments' => array('administer mouseflow'),
		'type' => MENU_NORMAL_ITEM,
	);
	return $items;
}

/**
 * Implements hook_permission().
 */
function mouseflow_permission(){
	return array(
		'administer mouseflow' => array(
			'title' => 'Administer Mouseflow',
			'description' => 'Administer Mouseflow settings'
		),
	);
}

/**
 * Configuration form.
 */
function mouseflow_admin_form($form, &$form_state) {
	
	$form['mouseflow_website_id'] = array(
		'#type' => 'textfield',
		'#title' => 'Website ID',
		'#default_value' => variable_get('mouseflow_website_id', NULL),
		'#required' => FALSE,
	);
	
	$form['config'] = array(
    '#type' => 'vertical_tabs',
  );
	
	$form['config']['page_visibility'] = array(
    '#type' => 'fieldset',
    '#title' => t('Pages'),
  );
	$form['config']['page_visibility']['mouseflow_visibility_page'] = array(
      '#type' => 'radios',
      '#title' => t('Add tracking to specific pages'),
      '#options' => array(
				t('Every page except the listed pages'),
      	t('The listed pages only'),
			),
      '#default_value' => variable_get('mouseflow_visibility_page', 0),
	);
	$form['config']['page_visibility']['mouseflow_pages'] = array(
		'#type' => 'textarea',
		'#title' => 'Pages',
		'#title_display' => 'invisible',
		'#default_value' => variable_get('mouseflow_pages', ''),
		'#description' => "Specify pages by using their paths. Enter one path per line. The '*' character is a wildcard. Example paths are blog for the blog page and blog/* for every personal blog. <front> is the front page. If the PHP option is chosen, enter PHP code between <?php ?>. Note that executing incorrect PHP code can break your Drupal site.",
		'#rows' => 10,
	);
	
	$form['config']['role_visibility'] = array(
    '#type' => 'fieldset',
    '#title' => t('Roles'),
  );
	$form['config']['role_visibility']['mouseflow_visibility_roles'] = array(
    '#type' => 'radios',
    '#title' => t('Add tracking for specific roles'),
    '#options' => array(
      t('Add to the selected roles only'),
      t('Add to every role except the selected ones'),
    ),
    '#default_value' => variable_get('mouseflow_visibility_roles', 0),
  );

  $role_options = array_map('check_plain', user_roles());
  $form['config']['role_visibility']['mouseflow_roles'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Roles'),
    '#default_value' => variable_get('mouseflow_roles', array()),
    '#options' => $role_options,
    '#description' => t('If none of the roles are selected, all users will be tracked. If a user has any of the roles checked, that user will be tracked (or excluded, depending on the setting above).'),
  );

	return system_settings_form($form);
}


/**
 * Implements hook_page_alter().
 * Add Javascript to footer.
 */
function mouseflow_page_alter(&$page) {
	global $user;
	$id = variable_get('mouseflow_website_id', NULL);

	if ($id && _mouseflow_visiblity_roles($user) && _mouseflow_visibility_pages()) {
		$script = 'var _mfq = _mfq || [];
		(function() {
			var mf = document.createElement("script");
			mf.type = "text/javascript"; mf.async = true;
			mf.src = "//cdn.mouseflow.com/projects/'.$id.'.js";
			document.getElementsByTagName("head")[0].appendChild(mf);
		})();';
		drupal_add_js($script, array('scope' => 'footer', 'type' => 'inline'));
	}
}

/**
 * Check configuration for user roles that should be included/excluded in tracking. 
 */
function _mouseflow_visiblity_roles($account){
  $visibility = variable_get('mouseflow_visibility_roles', 0);
  $enabled = $visibility;
  $roles = variable_get('mouseflow_roles', array());

  if (array_sum($roles) > 0) {
    // One or more roles are selected.
    foreach (array_keys($account->roles) as $rid) {
      // Is the current user a member of one of these roles?
      if (isset($roles[$rid]) && $rid == $roles[$rid]) {
        // Current user is a member of a role that should be tracked/excluded from tracking.
        $enabled = !$visibility;
        break;
      }
    }
  }
  else {
    // No role is selected for tracking, therefore all roles should be tracked.
    $enabled = TRUE;
  }

  return $enabled;
}

/**
 * Check configuration for pages that should be included/excluded in tracking. 
 */
function _mouseflow_visibility_pages(){
	static $page_match;

  // Cache visibility result if function is called more than once.
  if (!isset($page_match)) {

    $visibility = variable_get('mouseflow_visibility_page', 0);
    $setting_pages = variable_get('mouseflow_pages', '');

    // Match path if necessary.
    if (!empty($setting_pages)) {
      // Convert path to lowercase. This allows comparison of the same path
      // with different case. Ex: /Page, /page, /PAGE.
      $pages = drupal_strtolower($setting_pages);
        // Convert the Drupal path to lowercase
        $path = drupal_strtolower(drupal_get_path_alias($_GET['q']));
        // Compare the lowercase internal and lowercase path alias (if any).
        $page_match = drupal_match_path($path, $pages);
        if ($path != $_GET['q']) {
          $page_match = $page_match || drupal_match_path($_GET['q'], $pages);
        }
        // When $visibility has a value of 0, the tracking code is displayed on
        // all pages except those listed in $pages. When set to 1, it
        // is displayed only on those pages listed in $pages.
        $page_match = !($visibility xor $page_match);
    }
    else {
      $page_match = TRUE;
    }

  }

  return $page_match;
}